package com.test.java;

public class Re_Override {

	public static void main(String[] args) {

/*
 			[SUMMARY] Override 하기
 		
 		
 		   메소드 오버로딩, Method Overloading
		   - 메소드 이름 동을 x N생성 > 인자 리스트(다양하게)
		   
		   
		   메소드 오버라이드, Method Override
		   - 클래스 상속시에 발생
		   - 메소드 재정의
 
 
 		  포인트
		   1. 자식 클래스가 상속 받은 부모의 메소드를 그대로 사용하기 싫다.
		   		- 상속은 거부할 수 없다. 무조건 100% 진행
		   2. 상속 관계에 있는 클래스의 객체들은  대부분 공통된 사용법을 가지고 있다고 생각들을 한다.
				- 스스로 다른 형식의 메소드 생성 > 규칙 파괴;;
		   3. 겉으로 보기엔 부모의 메소드와 동일한데 내용물 바뀐 메소드를 만들어 내는 것 > 오버라이드
 
 
 			*** 상속관계에 있는 클래스 > 같은 목적을 가지는 메소드 구현
				> 반드시(***) 메소드 시그너처(이름)를 동일하게 만드는게 좋다.
				
					
	 		외부에서 보면 > 부모의 hello()와 자식의 hello()는 구분이 불가능하다.
			 > 결론 > 무조건 자식의 hello()가 호출된다.( 부모hello() > 선택 불가능 )
			 > 메소드의 알맹이가 수정된 것처럼 보인다.
			 > 메소드 재정의 > 메소드 오버라이드
			 > 시대에 맞게 내용을 업그레이드 + 사용법 유지!!!
			 
			 
			 메소드 오버라이드 > 메소드 재정의
			- 부모로부터 물려받은 메소드와 동일한 메소드를 자식 클래스에서 다시 선언하는 행동
			- 부모메소드와 자식 메소드가 동일하게 2개 존재하게 된다.
 
 */

	}

}
